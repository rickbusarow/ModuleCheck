name: Publish snapshot

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  GRADLE_OPTS_WINDOWS: >
    -Dorg.gradle.jvmargs=" -Xmx3g -XX:MaxMetaspaceSize=756m -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
    -Dorg.gradle.configureondemand=false
    -Dorg.gradle.parallel=false
    -Dkotlin.incremental=false
  GRADLE_OPTS_MACOS: >
    -Dorg.gradle.jvmargs=" -Xmx10g -XX:MaxMetaspaceSize=756m -XX:MaxPermSize=4096m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
    -Dorg.gradle.configureondemand=false
    -Dorg.gradle.parallel=false
    -Dkotlin.incremental=false
  GRADLE_OPTS_UBUNTU: >
    -Dorg.gradle.jvmargs=" -Xmx5g -XX:MaxMetaspaceSize=756m -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
    -Dorg.gradle.configureondemand=false
    -Dorg.gradle.parallel=false
    -Dkotlin.incremental=false

jobs:

  build-logic:
    runs-on: ubuntu-latest
    steps:
      - name: check out with token
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: cache build-logic
        uses: actions/cache@v3
        with:
          path: 'build-logic/**/build/'
          key: build-logic-jar
          enableCrossOsArchive: true

      - name: build build-logic
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :build-logic:compileKotlin :build-logic:jar

  build-all:
    needs:
      - build-logic
    runs-on: ubuntu-latest
    steps:
      - name: check out with token
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: restore build-logic
        uses: actions/cache/restore@v3
        with:
          path: build-logic/**/build/
          key: build-logic-jar
          enableCrossOsArchive: true

      - name: cache main build
        uses: actions/cache@v3
        with:
          path: '**/build'
          key: main-build-artifacts
          enableCrossOsArchive: true

      - name: main build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jar compileKotlin

  publish-snapshot:
    needs:
      - build-all
    if: github.repository == 'RBusarow/ModuleCheck'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      # break the publishing builds down a little into smaller steps
      # because gradle-build-action's caching is all-or-nothing.  If the full publish task
      # takes too long and times out, no cache is retained.

      - name: Compile Kotlin
        uses: gradle/gradle-build-action@v2
        with:
          arguments: compileKotlin

      - name: Dokka & JavadocJar
        uses: gradle/gradle-build-action@v2
        with:
          arguments: dokkaJavadocJar

      - name: Publish Snapshots
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publish
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
