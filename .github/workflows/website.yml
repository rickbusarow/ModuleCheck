name: deploy-website

on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  GRADLE_OPTS_WINDOWS: -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Dorg.gradle.configureondemand=false -Dorg.gradle.daemon=false -Dkotlin.daemon=false
  GRADLE_OPTS_MACOS: -Xmx10g -XX:MaxMetaspaceSize=756m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Dorg.gradle.configureondemand=false -Dorg.gradle.daemon=false -Dkotlin.daemon=false
  GRADLE_OPTS_UBUNTU: -Xmx5g -XX:MaxMetaspaceSize=756m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Dorg.gradle.configureondemand=false -Dorg.gradle.daemon=false -Dkotlin.daemon=false

jobs:

  build-logic:
    runs-on: ubuntu-latest
    steps:
      - name: check out with token
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: cache build-logic
        uses: actions/cache@v3
        with:
          path: |
            './**/build/'
            '../../../.gradle/caches'
            '../../../.gradle/wrapper'
          key: build-logic-jar
          enableCrossOsArchive: true

      - name: build build-logic
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :build-logic:compileKotlin :build-logic:jar

  build-all:
    needs:
      - build-logic
    runs-on: ubuntu-latest
    steps:
      - name: check out with token
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: restore build-logic
        uses: actions/cache/restore@v3
        with:
          path: build-logic/**/build/
          key: build-logic-jar
          enableCrossOsArchive: true

      - name: cache main build
        uses: actions/cache@v3
        with:
          path: |
            './**/build/'
            '../../../.gradle/caches'
            '../../../.gradle/wrapper'
          key: main-build-artifacts
          enableCrossOsArchive: true

      - name: main build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jar compileKotlin

  publish:
    needs:
      - build-logic
    runs-on: macos-latest
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repo
        uses: actions/checkout@v3

      # Node is required for npm
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn
          cache-dependency-path: website/yarn.lock

      - name: Install Yarn
        working-directory: website
        run: yarn install --frozen-lockfile

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: restore main build cache
        uses: actions/cache/restore@v3
        with:
          path: |
            './**/build/'
            '../../../.gradle/caches'
            '../../../.gradle/wrapper'
          key: main-build-artifacts
          enableCrossOsArchive: true

      - name: dokka cache
        uses: actions/cache@v3
        with:
          path: |
            '**/build/dokka'
            '../../../.gradle/caches'
            '../../../.gradle/wrapper'
          key: dokka-build-artifacts
          enableCrossOsArchive: true

      - name: compileKotlin
        uses: gradle/gradle-build-action@v2
        with:
          arguments: compileKotlin "${{ env.macosGradleArgs }}"
          cache-read-only: false

      - name: dokkaHtmlMultiModule
        uses: gradle/gradle-build-action@v2
        with:
          arguments: dokkaHtmlMultiModule
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: website build cache
        uses: actions/cache@v3
        with:
          path: |
            website/.docusaurus
            website/build
            website/node_modules
          key: website-build
          enableCrossOsArchive: true

      - name: buildSite
        uses: gradle/gradle-build-action@v2
        with:
          arguments: buildSite
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: website/build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
