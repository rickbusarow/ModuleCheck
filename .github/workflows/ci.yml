name: CI

on:
  pull_request:
  workflow_dispatch:

env:
  macosGradleArgs: '-Dorg.gradle.jvmargs=-Xmx10g'
  ubuntuGradleArgs: '-Dorg.gradle.jvmargs=-Xmx5g'
  windowsGradleArgs: '-Dorg.gradle.jvmargs=-Xmx5g'

concurrency:
  group: ci-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:

  static-analysis:

    runs-on: macos-latest
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: ci versions matrix check (used by everyone but Renovate)
        if: github.actor != 'renovate[bot]'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: versionsMatrixYamlCheck
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: ci versions matrix update (used by Renovate)
        if: github.actor == 'renovate[bot]'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: versionsMatrixGenerateYaml
          cache-read-only: false
          gradle-home-cache-cleanup: true

      # If the versions matrix was just updated, commit and push those changes.
      - name: commit dependency-guard baseline changes (used by main repo)
        if: github.actor == 'renovate[bot]'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update versions matrix in yaml
          commit_options: '--no-verify --signoff'

      - name: dependency-guard check (used by everyone but Renovate)
        if: github.actor != 'renovate[bot]'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: dependencyGuard
          cache-read-only: false
          gradle-home-cache-cleanup: true --refresh-dependencies

      - name: dependency-guard baseline (used by Renovate)
        if: github.actor == 'renovate[bot]'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: dependencyGuardBaseline
          cache-read-only: false
          gradle-home-cache-cleanup: true --refresh-dependencies

      # If dependency-guard generated changes, commit and push those changes.
      - name: commit dependency-guard baseline changes (used by main repo)
        if: github.actor == 'renovate[bot]'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update dependency-guard baseline
          commit_options: '--no-verify --signoff'

      - name: KtLint format (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlintFormat
          cache-read-only: false
          gradle-home-cache-cleanup: true

      # If KtLint generated changes, commit and push those changes.
      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply KtLint format
          commit_options: '--no-verify --signoff'

      - name: KtLint check (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlintCheck
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: ModuleCheck with auto-correct (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: moduleCheckAuto
          cache-read-only: false
          gradle-home-cache-cleanup: true

      # If KtLint generated changes, commit and push those changes.
      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply ModuleCheck fixes
          commit_options: '--no-verify --signoff'

      - name: ModuleCheck check (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: moduleCheck
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: Doks with auto-correct (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: doks
          cache-read-only: false
          gradle-home-cache-cleanup: true

      # If Doks generated changes, commit and push those changes.
      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply Doks updates
          commit_options: '--no-verify --signoff'

      - name: Doks check (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: doksCheck
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: Check that the version is a -SNAPSHOT version
        uses: gradle/gradle-build-action@v2
        with:
          arguments: checkVersionIsSnapshot
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: Sync versions in website docs (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: updateWebsiteNextDocsVersionRefs
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: Check versions in website docs (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: checkWebsiteNextDocsVersionRefs
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update docs versions
          commit_options: '--no-verify --signoff'

      - name: Update version in website package.json (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: updateWebsitePackageJsonVersion
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: Check version in website package.json (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: checkWebsitePackageJsonVersion
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update website versions
          commit_options: '--no-verify --signoff'

      - name: Update website changelog from root CHANGELOG (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: updateWebsiteChangelog
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update website changelog
          commit_options: '--no-verify --signoff'

      - name: artifacts check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: artifactsCheck
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: detektAll
        uses: gradle/gradle-build-action@v2
        with:
          arguments: detektAll "${{ env.macosGradleArgs }}"
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: merge detekt SARIF reports
        uses: gradle/gradle-build-action@v2
        with:
          arguments: detektReportMerge
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: Upload SARIF to Github using the upload-sarif action
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: build/reports/detekt/merged.sarif

  website:
    name: build website
    runs-on: macos-latest
    steps:

      - name: Check out repo
        uses: actions/checkout@v3

      # Node is required for npm
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn
          cache-dependency-path: website/yarn.lock

      - name: Install Yarn
        working-directory: website
        run: yarn install --frozen-lockfile

      - uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: compileKotlin
        uses: gradle/gradle-build-action@v2
        with:
          arguments: compileKotlin "${{ env.macosGradleArgs }}"
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: dokkaHtmlMultiModule
        uses: gradle/gradle-build-action@v2
        with:
          arguments: dokkaHtmlMultiModule "${{ env.macosGradleArgs }}"
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: buildSite
        uses: gradle/gradle-build-action@v2
        with:
          arguments: buildSite "${{ env.macosGradleArgs }}"
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: knit check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: knitCheck
          cache-read-only: false
          gradle-home-cache-cleanup: true

  unit-tests:
    strategy:
      fail-fast: false
      matrix:
        runner: [ ubuntu, windows ]
        task: [ testShard1, testShard2, testShard3, testShard4 ]
    runs-on: ${{ matrix.runner }}-latest
    steps:
      - name: check out
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: tests - windows
        if: runner.os == 'Windows'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ${{ matrix.task }} ${{ env.windowsGradleArgs }}
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: tests - macos
        if: runner.os == 'macOS'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ${{ matrix.task }} ${{ env.macosGradleArgs }}
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: tests - ubuntu
        if: runner.os == 'Linux'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ${{ matrix.task }} ${{ env.ubuntuGradleArgs }}
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-results-macos
          path: ./**/build/reports/tests/

      - name: Unit test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Unit Test Results - ${{runner.os}}

  integration-tests-ubuntu:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      ### <start-matrix>
      matrix:
        kotlin-version: [ 1.8.0, 1.8.10, 1.8.21 ]
        gradle-version: [ 7.5.1, 7.6.1, 8.0.2, 8.1.1 ]
        agp-version: [ 7.3.1, 7.4.2, 8.0.1 ]
        anvil-version: [ 2.4.5 ]
        exclude:
          - gradle-version: 8.1.1
            agp-version: 7.3.1
          - gradle-version: 8.1.1
            agp-version: 7.4.2
          - gradle-version: 7.5.1
            agp-version: 8.0.1
          - gradle-version: 7.6.1
            agp-version: 8.0.1
      ### <end-matrix>

    steps:
      - name: check out
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: publishToMavenLocalNoDokka integrationTestClasses
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publishToMavenLocalNoDokka integrationTestClasses "${{ env.ubuntuGradleArgs }}"
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: integration tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            integrationTest
            "${{ env.ubuntuGradleArgs }}"
            -Pmodulecheck.gradleVersion=${{ matrix.gradle-version }}
            -Pmodulecheck.agpVersion=${{ matrix.agp-version }}
            -Pmodulecheck.kotlinVersion=${{ matrix.kotlin-version }}
            -Pmodulecheck.anvilVersion=${{ matrix.anvil-version }}
            -Pmodulecheck.exhaustive=false

      - name: Unit test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Integration Test Results - macos

  integration-tests-windows:

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [ integrationTestShard1, integrationTestShard2, integrationTestShard3, integrationTestShard4 ]

    steps:
      - name: check out
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: publishToMavenLocal
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publishToMavenLocalNoDokka "${{ env.windowsGradleArgs }}"
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            ${{ matrix.shard }}
            "${{ env.windowsGradleArgs }}"
            -Pmodulecheck.exhaustive=false
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: Archive integration test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: integration-test-results-windows
          path: ./**/build/reports/tests/

      - name: Integration test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Integration Test Results - Windows

  all-checks:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - integration-tests-ubuntu
      - integration-tests-windows
      - static-analysis
      - unit-tests
      - website
    steps:
      - name: require that all other jobs have passed
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: doks, ktlint, modulecheck, versioning
          jobs: ${{ toJSON(needs) }}
