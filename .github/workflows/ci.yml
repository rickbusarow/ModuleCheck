name: CI

on:
  pull_request:
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # every day at 10pm CST (4 UTC)
    - cron: '0 4 * * *'


jobs:

  cancel-other-jobs:

    runs-on: ubuntu-latest

    steps:
      # cancel previous jobs
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.0
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

  detekt:

    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: detekt
        run: ./gradlew detekt --no-daemon

  ktlint:

    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 14

      # formats all src files
      - name: KtLint format
        run: ./gradlew ktlintformat --no-daemon

      # If KtLint generated changes, commit and push those changes.
      - name: commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply KtLint format
          commit_options: '--no-verify --signoff'

  versioning:

    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses : actions/setup-java@v2
        with :
          distribution : 'adopt'
          java-version : '14'
          cache: 'gradle'

      - name: Sync versions in website docs
        run: ./gradlew updateWebsiteNextDocsVersionRefs --no-daemon

      - name: commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update docs versions
          commit_options: '--no-verify --signoff'

      - name: Update version in website package.json
        run: ./gradlew updateWebsitePackageJsonVersion --no-daemon

      - name: commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update website versions
          commit_options: '--no-verify --signoff'

  tests-ubuntu:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        kotlin-version: [ 1.5.30, 1.5.21, 1.6.0-RC ]
        gradle-version: [ 7.2, 7.3-rc-1 ] # 7.0.2 breaks Anvil?
        agp-version: [ 7.0.3, 4.2.1 ]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/buildSrc/.gradle
            ~/buildSrc/build
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts', '**/libs.versions.toml', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: all tests
        run: ./gradlew testJvm -Pmodulecheck.kotlinVersion=${{ matrix.kotlin-version }} -Pmodulecheck.gradleVersion=${{ matrix.gradle-version }} -Pmodulecheck.agpVersion=${{ matrix.agp-version }} --rerun-tasks --no-daemon

      - name: Archive test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results-ubuntu
          path: ./**/build/reports/tests/

      - name: Unit test results
        uses: mikepenz/action-junit-report@v1
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Unit Test Results - Ubuntu

  tests-windows:

    runs-on: windows-latest

    steps:

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/buildSrc/.gradle
            ~/buildSrc/build
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts', '**/libs.versions.toml', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: all tests
        run: ./gradlew testJvm --rerun-tasks --no-daemon

      - name: Archive test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results-windows
          path: ./**/build/reports/tests/

      - name: Unit test results
        uses: mikepenz/action-junit-report@v1
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Unit Test Results - Windows
