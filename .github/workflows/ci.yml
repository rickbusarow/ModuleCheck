name: CI

on:
  pull_request:
  workflow_dispatch:

env:
  macosGradleArgs: '-Dorg.gradle.jvmargs=-Xmx10g -Dfile.encoding=UTF-8 -XX:+UseParallelGC'
  ubuntuGradleArgs: '-Dorg.gradle.jvmargs=-Xmx5g -Dfile.encoding=UTF-8 -XX:+UseParallelGC'
  windowsGradleArgs: '-Dorg.gradle.jvmargs=-Xmx4g -Dfile.encoding=UTF-8 -XX:+UseParallelGC'

jobs:

  cancel-other-jobs:

    runs-on: ubuntu-latest

    steps:
      # cancel previous jobs
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

  static-analysis:

    runs-on: ubuntu-latest
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: ci versions matrix check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: versionsMatrixYamlCheck
          cache-read-only: false

      - name: dependency-guard
        uses: gradle/gradle-build-action@v2
        with:
          arguments: dependencyGuard
          cache-read-only: false --refresh-dependencies

      - name: artifacts check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: artifactsCheck
          cache-read-only: false

      - name: detekt
        uses: gradle/gradle-build-action@v2
        with:
          arguments: detekt
          cache-read-only: false

      - name: Upload SARIF to Github using the upload-sarif action
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: build/reports/detekt/merged.sarif

  ktlint:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: KtLint format (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlintformat -q
          cache-read-only: false

      # If KtLint generated changes, commit and push those changes.
      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply KtLint format
          commit_options: '--no-verify --signoff'

      - name: KtLint check (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlintCheck -q
          cache-read-only: false

  modulecheck:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: ModuleCheck with auto-correct (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: moduleCheckAuto
          cache-read-only: false

      # If KtLint generated changes, commit and push those changes.
      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply ModuleCheck fixes
          commit_options: '--no-verify --signoff'

      - name: ModuleCheck check (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: moduleCheck
          cache-read-only: false

  versioning:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Check that the version is a -SNAPSHOT version
        uses: gradle/gradle-build-action@v2
        with:
          arguments: checkVersionIsSnapshot
          cache-read-only: false

      - name: Sync versions in website docs (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: updateWebsiteNextDocsVersionRefs
          cache-read-only: false

      - name: Check versions in website docs (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: checkWebsiteNextDocsVersionRefs
          cache-read-only: false

      - name: commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update docs versions
          commit_options: '--no-verify --signoff'

      - name: Update version in website package.json (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: updateWebsitePackageJsonVersion
          cache-read-only: false

      - name: Check version in website package.json (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: checkWebsitePackageJsonVersion
          cache-read-only: false

      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update website versions
          commit_options: '--no-verify --signoff'

      - name: Update website changelog from root CHANGELOG (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: updateWebsiteChangelog
          cache-read-only: false

      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update website changelog
          commit_options: '--no-verify --signoff'

  website:
    name: build website
    runs-on: macos-latest
    steps:

      - name: Check out repo
        uses: actions/checkout@v3

      # Node is required for npm
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn
          cache-dependency-path: website/yarn.lock

      - name: Install Yarn
        working-directory: website
        run: yarn install --frozen-lockfile

      - uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: compileKotlin
        uses: gradle/gradle-build-action@v2
        with:
          arguments: compileKotlin "${{ env.macosGradleArgs }}"
          cache-read-only: false

      - name: dokkaHtmlMultiModule
        uses: gradle/gradle-build-action@v2
        with:
          arguments: dokkaHtmlMultiModule "${{ env.macosGradleArgs }}"
          cache-read-only: false

      - name: buildSite
        uses: gradle/gradle-build-action@v2
        with:
          arguments: buildSite "${{ env.macosGradleArgs }}"
          cache-read-only: false

      - name: knit check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: knitcheck
          cache-read-only: false

  tests-macos:

    runs-on: macos-latest

    steps:
      - name: check out with token
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: all tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test "${{ env.macosGradleArgs }}"
          cache-read-only: false

      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-results-macos
          path: ./**/build/reports/tests/

      - name: Unit test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Unit Test Results - macos

  publish-local-ubuntu:

    runs-on: ubuntu-latest

    steps:
      - name: check out
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: publishToMavenLocalNoDokka integrationTestClasses
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publishToMavenLocalNoDokka integrationTestClasses "${{ env.ubuntuGradleArgs }}"
          cache-read-only: false

  integration-tests-matrix-ubuntu:

    runs-on: ubuntu-latest
    needs: publish-local-ubuntu

    strategy:
      fail-fast: false
      ### <start-matrix>
      matrix:
        kotlin-version: [ 1.7.0, 1.7.10 ]
        gradle-version: [ 7.2, 7.4.2, 7.5.1 ]
        agp-version: [ 7.0.1, 7.1.3, 7.2.2, 7.3.0 ]
        anvil-version: [ 2.4.2 ]
        exclude:
          - agp-version: 7.0.1
            anvil-version: 2.4.2
          - gradle-version: 7.2
            agp-version: 7.2.2
          - gradle-version: 7.2
            agp-version: 7.3.0
          - gradle-version: 7.4.2
            anvil-version: 2.4.2
      ### <end-matrix>

    steps:
      - name: check out
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: integration tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            integrationTest
            "${{ env.ubuntuGradleArgs }}"
            -Pmodulecheck.gradleVersion=${{ matrix.gradle-version }}
            -Pmodulecheck.agpVersion=${{ matrix.agp-version }}
            -Pmodulecheck.kotlinVersion=${{ matrix.kotlin-version }}
            -Pmodulecheck.anvilVersion=${{ matrix.anvil-version }}
            -Pmodulecheck.exhaustive=false

      - name: Unit test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Integration Test Results - macos

  integration-tests-ubuntu:

    runs-on: ubuntu-latest
    needs: integration-tests-matrix-ubuntu

    steps:
      - name: require that the matrix has passed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  tests-windows:

    runs-on: windows-latest

    steps:

      - name: check out with token
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: all tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test "${{ env.windowsGradleArgs }}"
          cache-read-only: false

      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-results-windows
          path: ./**/build/reports/tests/

      - name: Unit test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Unit Test Results - Windows


  integration-tests-windows:

    runs-on: windows-latest

    steps:

      - name: check out
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: publishToMavenLocal
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publishToMavenLocalNoDokka "${{ env.windowsGradleArgs }}"
          cache-read-only: false

      - name: integration tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            integrationTest
            "${{ env.windowsGradleArgs }}"
            -Pmodulecheck.exhaustive=false
          cache-read-only: false

      - name: Archive integration test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: integration-test-results-windows
          path: ./**/build/reports/tests/

      - name: Integration test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Integration Test Results - Windows
