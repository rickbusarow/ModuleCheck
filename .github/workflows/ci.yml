name: CI

on:
  pull_request:
  workflow_dispatch:

jobs:

  cancel-other-jobs:

    runs-on: ubuntu-latest

    steps:
      # cancel previous jobs
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

  static-analysis:

    runs-on: ubuntu-latest
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - name: dependency-guard
        run: ./gradlew dependencyGuard --no-daemon --refresh-dependencies

      - name: artifacts check
        run: ./gradlew artifactsCheck --no-daemon

      - name: detekt
        run: ./gradlew detekt --no-daemon

      - name: Upload SARIF to Github using the upload-sarif action
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: build/reports/detekt/merged.sarif

  ktlint:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - name: KtLint format (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew ktlintformat -q --no-daemon

      # If KtLint generated changes, commit and push those changes.
      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply KtLint format
          commit_options: '--no-verify --signoff'

      - name: KtLint check (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew ktlintCheck -q --no-daemon

  versioning:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '14'
          cache: 'gradle'

      - name: Check that the version is a -SNAPSHOT version
        run: ./gradlew checkVersionIsSnapshot --no-daemon

      - name: Sync versions in website docs (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew updateWebsiteNextDocsVersionRefs --no-daemon

      - name: Check versions in website docs (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew checkWebsiteNextDocsVersionRefs --no-daemon

      - name: commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update docs versions
          commit_options: '--no-verify --signoff'

      - name: Update version in website package.json (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew updateWebsitePackageJsonVersion --no-daemon

      - name: Check version in website package.json (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew checkWebsitePackageJsonVersion --no-daemon

      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update website versions
          commit_options: '--no-verify --signoff'

      - name: Update website changelog from root CHANGELOG (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew updateWebsiteChangelog --no-daemon

      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update website changelog
          commit_options: '--no-verify --signoff'

  publish-maven-local:

    runs-on: ubuntu-latest

    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - name: publish to maven local and build tests
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-dependencies-cache-key: gradle/libs.versions.toml
          arguments: |
            publishToMavenLocal
            buildTests
          concurrent: true
          gradle-build-scan-report: false

  website:
    name: build website
    runs-on: ubuntu-latest
    needs: publish-maven-local
    steps:

      - name: Check out repo
        uses: actions/checkout@v3

      # Node is required for npm
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn
          cache-dependency-path: website/yarn.lock

      - name: Install Yarn
        working-directory: website
        run: |
          yarn install --frozen-lockfile

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - uses: gradle/wrapper-validation-action@v1

      - name: build website
        run: ./gradlew buildSite --no-daemon

  tests-ubuntu:

    runs-on: ubuntu-latest
    needs: publish-maven-local

    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - name: all tests
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-dependencies-cache-key: gradle/libs.versions.toml
          arguments: testJvm
          concurrent: true
          gradle-build-scan-report: false

      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-results-ubuntu
          path: ./**/build/reports/tests/

      - name: Unit test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Unit Test Results - Ubuntu

  maybe-start-windows-runner:
    name: Maybe start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.determine-windows-runner-label.outputs.value }}
      ec2-instance-id: ${{ steps.start-ec2-windows-runner.outputs.ec2-instance-id }}
    steps:

      - name: Configure AWS credentials (used by main repo)
        uses: aws-actions/configure-aws-credentials@v1
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          aws-access-key-id: ${{ secrets.EC2_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.EC2_ACCESS_KEY }}
          aws-region: ${{ secrets.EC2_REGION }}

      # check out the internal ec2 action
      - uses: actions/checkout@v3

      - name: Start EC2 Windows runner (used by main repo)
        uses: ./.github/ec2-github-runner
        id: start-ec2-windows-runner
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          mode: start
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-0e05c4ec12dae0d2f
          ec2-instance-type: t3.2xlarge
          ec2-os: windows
          subnet-id: ${{ secrets.EC2_SUBNET_ID }}
          security-group-id: ${{ secrets.EC2_SECURITY_GROUP_ID }}
          runner-home-dir: C:\actions-runner

      - name: Determine Windows runner label
        uses: haya14busa/action-cond@v1
        id: determine-windows-runner-label
        with:
          cond: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
          if_true: ${{ steps.start-ec2-windows-runner.outputs.label }}
          if_false: windows-latest

  tests-windows:

    needs: maybe-start-windows-runner
    runs-on: windows-latest

    steps:

      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - name: all tests
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-dependencies-cache-key: gradle/libs.versions.toml
          arguments: testJvm
          concurrent: true
          gradle-build-scan-report: false

      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-results-windows
          path: ./**/build/reports/tests/

      - name: Unit test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Unit Test Results - Windows

  maybe-stop-windows-runner:
    name: Maybe stop self-hosted EC2 runner
    runs-on: ubuntu-latest
    needs:
      - maybe-start-windows-runner
      - tests-windows
    if: ${{ always() }}
    steps:

      - name: Configure AWS credentials (used by main repo)
        uses: aws-actions/configure-aws-credentials@v1
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          aws-access-key-id: ${{ secrets.EC2_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.EC2_ACCESS_KEY }}
          aws-region: ${{ secrets.EC2_REGION }}

      # check out the internal ec2 action
      - uses: actions/checkout@v3

      - name: Stop EC2 runner (used by main repo)
        uses: ./.github/ec2-github-runner
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          mode: stop
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.maybe-start-windows-runner.outputs.label }}
          ec2-instance-id: ${{ needs.maybe-start-windows-runner.outputs.ec2-instance-id }}
