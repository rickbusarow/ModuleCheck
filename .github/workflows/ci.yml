name: CI

on:
  pull_request:
  workflow_dispatch:


jobs:

  cancel-other-jobs:

    runs-on: ubuntu-latest

    steps:
      # cancel previous jobs
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

  website:
    name: build website
    runs-on: ubuntu-latest
    steps:

      - name: Check out repo
        uses: actions/checkout@v3

      # Node is required for npm
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: yarn
          cache-dependency-path: website/yarn.lock

      - name: Install Yarn
        working-directory: website
        run: |
          yarn install --frozen-lockfile

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - uses: gradle/wrapper-validation-action@v1

      - name: build website
        run: ./gradlew buildSite --no-daemon

  artifacts-check:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - name: artifacts check
        run: ./gradlew artifactsCheck --no-daemon

  detekt:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - name: detekt
        run: ./gradlew detekt --no-daemon

      - name: Upload SARIF to Github using the upload-sarif action
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: build/reports/detekt/merged.sarif

  ktlint:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - name: KtLint format (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew ktlintformat -q --no-daemon

      # If KtLint generated changes, commit and push those changes.
      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply KtLint format
          commit_options: '--no-verify --signoff'

      - name: KtLint check (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew ktlintCheck -q --no-daemon

  modulecheck:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - name: ModuleCheck with auto-correct (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew moduleCheckAuto --no-daemon

      # If KtLint generated changes, commit and push those changes.
      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply ModuleCheck fixes
          commit_options: '--no-verify --signoff'

      - name: ModuleCheck check (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew moduleCheck --no-daemon

  versioning:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '14'
          cache: 'gradle'

      - name: Check that the version is a -SNAPSHOT version
        run: ./gradlew checkVersionIsSnapshot --no-daemon

      - name: Sync versions in website docs (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew updateWebsiteNextDocsVersionRefs --no-daemon

      - name: Check versions in website docs (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew checkWebsiteNextDocsVersionRefs --no-daemon

      - name: commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update docs versions
          commit_options: '--no-verify --signoff'

      - name: Update version in website package.json (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew updateWebsitePackageJsonVersion --no-daemon

      - name: Check version in website package.json (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew checkWebsitePackageJsonVersion --no-daemon

      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update website versions
          commit_options: '--no-verify --signoff'

  tests-ubuntu:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        kotlin-version: [ 1.5.32, 1.6.20 ]
        gradle-version: [ 7.2, 7.4.2 ]
        agp-version: [ 7.0.3, 7.1.3 ]
        anvil-version: [ 2.3.11, 2.4.0 ]
        exclude:
          # Anvil 2.4.0 doesn't support kotlin 1.5.x
          - kotlin-version: 1.5.32
            anvil-version: 2.4.0
          - kotlin-version: 1.6.20
            anvil-version: 2.3.11
          # These exclusions just save time/computing.  The matrix exists so that tests can execute
          # against older versions and bleeding edge, but this doesn't need to be done by mutating
          # a single version at a time.
          - kotlin-version: 1.5.32
            agp-version: 7.1.3
          - kotlin-version: 1.6.20
            agp-version: 7.0.3
          - gradle-version: 7.4.2
            agp-version: 7.0.3

    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - name: all tests
        run: ./gradlew testJvm -Pmodulecheck.kotlinVersion=${{ matrix.kotlin-version }} -Pmodulecheck.gradleVersion=${{ matrix.gradle-version }} -Pmodulecheck.agpVersion=${{ matrix.agp-version }} --no-daemon

      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-results-ubuntu
          path: ./**/build/reports/tests/

      - name: Unit test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Unit Test Results - Ubuntu

  tests-windows:

    runs-on: windows-latest

    steps:

      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - name: all tests
        run: ./gradlew testJvm --no-daemon

      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-results-windows
          path: ./**/build/reports/tests/

      - name: Unit test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Unit Test Results - Windows
