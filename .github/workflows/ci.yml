name: CI

on:
  pull_request:
  workflow_dispatch:

env:
  #  GRADLE_OPTS_WINDOWS: -Xmx5g -XX:MaxMetaspaceSize=756m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Dorg.gradle.configureondemand=false -Dorg.gradle.daemon=false -Dkotlin.daemon=false
  GRADLE_OPTS_WINDOWS: -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Dorg.gradle.configureondemand=false -Dorg.gradle.daemon=false -Dkotlin.daemon=false
  GRADLE_OPTS_MACOS: -Xmx10g -XX:MaxMetaspaceSize=756m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Dorg.gradle.configureondemand=false -Dorg.gradle.daemon=false -Dkotlin.daemon=false
  GRADLE_OPTS_UBUNTU: -Xmx5g -XX:MaxMetaspaceSize=756m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Dorg.gradle.configureondemand=false -Dorg.gradle.daemon=false -Dkotlin.daemon=false

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build-logic:
    runs-on: macos-latest
    steps:
      - name: check out with token
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: cache build-logic
        uses: actions/cache@v3
        with:
          path: 'build-logic/**/build/'
          key: build-logic-jar
          enableCrossOsArchive: true

      - name: build build-logic
        run: ./gradlew :build-logic:compileKotlin :build-logic:jar

  build-all:
    needs:
      - build-logic
    runs-on: macos-latest
    steps:
      - name: check out with token
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: restore build-logic
        uses: actions/cache/restore@v3
        with:
          path: build-logic/**/build/
          key: build-logic-jar
          enableCrossOsArchive: true

      - name: cache main build
        uses: actions/cache@v3
        with:
          path: '**/build'
          key: main-build-artifacts
          enableCrossOsArchive: true

      - name: main build
        run: ./gradlew jar compileKotlin

  static-analysis:
    needs:
      - build-logic
    runs-on: ubuntu-latest
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: restore build-logic
        uses: actions/cache/restore@v3
        with:
          path: build-logic/**/build/
          key: build-logic-jar
          enableCrossOsArchive: true

      - name: ci versions matrix check (used by everyone but Renovate)
        if: github.actor != 'renovate[bot]'
        run: ./gradlew versionsMatrixYamlCheck unitTestShardMatrixYamlCheck

      - name: ci versions matrix update (used by Renovate)
        if: github.actor == 'renovate[bot]'
        run: ./gradlew versionsMatrixGenerateYaml unitTestShardMatrixGenerateYaml

      # If the versions matrix was just updated, commit and push those changes.
      - name: commit dependency-guard baseline changes (used by main repo)
        if: github.actor == 'renovate[bot]'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update versions matrix in yaml
          commit_options: '--no-verify --signoff'

      - name: dependency-guard check (used by everyone but Renovate)
        if: github.actor != 'renovate[bot]'
        run: ./gradlew dependencyGuard --refresh-dependencies

      - name: dependency-guard baseline (used by Renovate)
        if: github.actor == 'renovate[bot]'
        run: ./gradlew dependencyGuardBaseline --refresh-dependencies

      # If dependency-guard generated changes, commit and push those changes.
      - name: commit dependency-guard baseline changes (used by main repo)
        if: github.actor == 'renovate[bot]'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update dependency-guard baseline
          commit_options: '--no-verify --signoff'

      - name: KtLint format (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew ktlintFormat

      # If KtLint generated changes, commit and push those changes.
      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply KtLint format
          commit_options: '--no-verify --signoff'

      - name: KtLint check (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew ktlintCheck

      - name: ModuleCheck with auto-correct (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew moduleCheckAuto

      # If KtLint generated changes, commit and push those changes.
      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply ModuleCheck fixes
          commit_options: '--no-verify --signoff'

      - name: ModuleCheck check (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew moduleCheck

      - name: Doks with auto-correct (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew doks

      # If Doks generated changes, commit and push those changes.
      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply Doks updates
          commit_options: '--no-verify --signoff'

      - name: Doks check (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew doksCheck

      - name: Check that the version is a -SNAPSHOT version
        run: ./gradlew checkVersionIsSnapshot

      - name: Sync versions in website docs (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew updateWebsiteNextDocsVersionRefs

      - name: Check versions in website docs (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew checkWebsiteNextDocsVersionRefs

      - name: commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update docs versions
          commit_options: '--no-verify --signoff'

      - name: Update version in website package.json (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew updateWebsitePackageJsonVersion

      - name: Check version in website package.json (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew checkWebsitePackageJsonVersion

      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update website versions
          commit_options: '--no-verify --signoff'

      - name: Update website changelog from root CHANGELOG (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew updateWebsiteChangelog

      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update website changelog
          commit_options: '--no-verify --signoff'

      - name: artifacts check
        run: ./gradlew artifactsCheck

  detekt:
    needs:
      - build-all
    runs-on: macos-latest
    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: restore main build cache
        uses: actions/cache/restore@v3
        with:
          path: '**/build'
          key: main-build-artifacts
          enableCrossOsArchive: true

      - name: detektAll
        run: ./gradlew detektAll

      - name: merge detekt SARIF reports
        run: ./gradlew detektReportMerge

      - name: Upload SARIF to Github using the upload-sarif action
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: build/reports/detekt/merged.sarif

  build-website:
    needs:
      - build-all
    runs-on: macos-latest
    steps:

      - name: Check out repo
        uses: actions/checkout@v3

      # Node is required for npm
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn
          cache-dependency-path: website/yarn.lock

      - name: Install Yarn
        working-directory: website
        run: yarn install --frozen-lockfile

      - uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: restore main build cache
        uses: actions/cache/restore@v3
        with:
          path: '**/build'
          key: main-build-artifacts
          enableCrossOsArchive: true

      - name: dokka cache
        uses: actions/cache@v3
        with:
          path: '**/build/dokka'
          key: dokka-build-artifacts
          enableCrossOsArchive: true

      - name: dokkaHtmlMultiModule
        run: ./gradlew dokkaHtmlMultiModule

      - name: website build cache
        uses: actions/cache@v3
        with:
          path: |
            website/.docusaurus
            website/build
            website/node_modules
          key: website-build
          enableCrossOsArchive: true

      - name: buildSite
        run: ./gradlew buildSite

      - name: knit check
        run: ./gradlew knitCheck

  unit-tests:
    needs:
      - build-all
    strategy:
      fail-fast: false
      matrix:
        runner: [ ubuntu, windows ]
        ### <start-unit-test-shards>
        shardNum: [ 1, 2, 3, 4, 5, 6 ]
        ### <end-unit-test-shards>
    runs-on: ${{ matrix.runner }}-latest
    steps:
      - name: check out
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: restore main build cache
        uses: actions/cache/restore@v3
        with:
          path: '**/build'
          key: main-build-artifacts
          enableCrossOsArchive: true

      - name: tests
        run: ./gradlew testShard${{ matrix.shardNum }}

      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-results
          path: ./**/build/reports/tests/

      - name: Unit test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Unit Test Results - ${{runner.os}}

  integration-tests-ubuntu:
    needs:
      - build-all
    strategy:
      fail-fast: false
      ### <start-versions-matrix>
      matrix:
        kotlin-version: [ 1.8.0, 1.8.10, 1.8.21 ]
        gradle-version: [ 7.5.1, 7.6.1, 8.0.2, 8.1.1 ]
        agp-version: [ 7.3.1, 7.4.2, 8.0.1 ]
        anvil-version: [ 2.4.5 ]
        exclude:
          - gradle-version: 8.1.1
            agp-version: 7.3.1
          - gradle-version: 8.1.1
            agp-version: 7.4.2
          - gradle-version: 7.5.1
            agp-version: 8.0.1
          - gradle-version: 7.6.1
            agp-version: 8.0.1
      ### <end-versions-matrix>
    runs-on: ubuntu-latest
    steps:
      - name: check out
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: restore main build cache
        uses: actions/cache/restore@v3
        with:
          path: '**/build'
          key: main-build-artifacts
          enableCrossOsArchive: true

      - name: publishToMavenLocalNoDokka integrationTestClasses
        run: ./gradlew publishToMavenLocalNoDokka integrationTestClasses

      - name: integration tests
        run: |
          ./gradlew integrationTest \
            -Pmodulecheck.gradleVersion=${{ matrix.gradle-version }} \
            -Pmodulecheck.agpVersion=${{ matrix.agp-version }} \
            -Pmodulecheck.kotlinVersion=${{ matrix.kotlin-version }} \
            -Pmodulecheck.anvilVersion=${{ matrix.anvil-version }} \
            -Pmodulecheck.exhaustive=false

      - name: Unit test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Integration Test Results

  integration-tests-windows:
    needs:
      - build-all
    strategy:
      fail-fast: false
      matrix:
        ### <start-integration-test-shards>
        shardNum: [ 1, 2, 3, 4, 5, 6 ]
        ### <end-integration-test-shards>
    runs-on: windows-latest
    steps:
      - name: check out
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set GRADLE_OPTS for OS
        uses: ./.github/actions/gradle-opts

      - name: restore main build cache
        uses: actions/cache/restore@v3
        with:
          path: '**/build'
          key: main-build-artifacts
          enableCrossOsArchive: true

      - name: publishToMavenLocal
        run: ./gradlew publishToMavenLocalNoDokka

      - name: tests
        run: ./gradlew integrationTestShard${{ matrix.shardNum }} -Pmodulecheck.exhaustive=false

      - name: Archive integration test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: integration-test-results-windows
          path: ./**/build/reports/tests/

      - name: Integration test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Integration Test Results - Windows

  all-checks:
    needs:
      - build-website
      - detekt
      - integration-tests-ubuntu
      - integration-tests-windows
      - static-analysis
      - unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: require that all other jobs have passed
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: doks, ktlint, modulecheck, versioning
          jobs: ${{ toJSON(needs) }}
