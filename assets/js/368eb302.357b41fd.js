"use strict";(self.webpackChunkmodulecheck=self.webpackChunkmodulecheck||[]).push([[3914],{65404:(e,n,l)=>{l.d(n,{R:()=>d,x:()=>i});var s=l(36672);const r={},t=s.createContext(r);function d(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(t.Provider,{value:n},e.children)}},75305:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"rules/project_depth","title":"Project Depth","description":"TL;DR - Low depth values mean faster builds and better all-around scalability.","source":"@site/versioned_docs/version-0.12.2/rules/project_depth.md","sourceDirName":"rules","slug":"/rules/project_depth","permalink":"/ModuleCheck/docs/0.12.2/rules/project_depth","draft":false,"unlisted":false,"editUrl":"https://github.com/rbusarow/ModuleCheck/blob/main/website/versioned_docs/version-0.12.2/rules/project_depth.md","tags":[],"version":"0.12.2","frontMatter":{"id":"project_depth","slug":"/rules/project_depth","title":"Project Depth","sidebar_label":"Project Depth"},"sidebar":"Docs","previous":{"title":"Overshot Dependency","permalink":"/ModuleCheck/docs/0.12.2/rules/overshot_dependency"},"next":{"title":"Could Use Anvil Factory Generation","permalink":"/ModuleCheck/docs/0.12.2/rules/use_anvil_factory_generation"}}');var r=l(23420),t=l(65404);const d={id:"project_depth",slug:"/rules/project_depth",title:"Project Depth",sidebar_label:"Project Depth"},i=void 0,c={},o=[{value:"Dependencies and Build Concurrency",id:"dependencies-and-build-concurrency",level:3},{value:"Depth",id:"depth",level:3}];function h(e){const n={a:"a",code:"code",em:"em",h3:"h3",hr:"hr",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"TL;DR - Low depth values mean faster builds and better all-around scalability."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["It's often useful to think of module dependencies as a directed tree\nor ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Directed_acyclic_graph",children:"directed acyclic graph"}),". If a module is a\nnode, then each module dependency is a child node, and the dependencies of those dependencies are\ngrand-child nodes."]}),"\n",(0,r.jsxs)(n.p,{children:["This is especially useful when thinking about ",(0,r.jsx)(n.strong,{children:"build performance"}),", because the parent-child\nrelationship is clear: ",(0,r.jsx)(n.em,{children:"child nodes must build before parent nodes"}),"."]}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TB\n\n  classDef depth2 fill:#BBF,stroke:#000,color:#000\n  classDef depth1 fill:#B9B,stroke:#000,color:#000\n  classDef depth0 fill:#FBB,stroke:#000,color:#000\n\n  linkStyle default stroke-width:2px,fill:none,stroke:green;\n\n  app(:app):::depth2\n\n  screen1(:screen-1):::depth1\n  screen2(:screen-2):::depth1\n\n  lib1(:lib-1):::depth0\n  lib2(:lib-2):::depth0\n\n  app --\x3e screen1\n  app --\x3e screen2\n\n  screen1 --\x3e lib1\n  screen1 --\x3e lib2\n  screen2 --\x3e lib2"}),"\n",(0,r.jsx)(n.p,{children:"In the above example,"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:":lib-1"})," and ",(0,r.jsx)(n.code,{children:":lib-2"})," must be built before ",(0,r.jsx)(n.code,{children:":screen-1"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:":lib-2"})," must be build before ",(0,r.jsx)(n.code,{children:":screen-2"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:":screen-1"})," and ",(0,r.jsx)(n.code,{children:":screen-2"})," must be built before ",(0,r.jsx)(n.code,{children:":app"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"It's worth pointing out that this relationship is recursive, as well. Grand-child nodes must build\nbefore their parents."}),"\n",(0,r.jsx)(n.h3,{id:"dependencies-and-build-concurrency",children:"Dependencies and Build Concurrency"}),"\n",(0,r.jsx)(n.p,{children:"Individual module builds are always done single-threaded, but multiple modules may build in parallel\nso long as no module in the set depends upon another module in that set. In the above graph,"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:":lib-1"})," and ",(0,r.jsx)(n.code,{children:":lib-2"})," may build in parallel"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:":lib-1"})," and ",(0,r.jsx)(n.code,{children:":screen-2"})," may build in parallel"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:":scren-1"})," and ",(0,r.jsx)(n.code,{children:":screen-2"})," may build in parallel"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The maximum number of parallel module builds is determined by the structure of the dependency graph\nand the number of available processor cores on the machine which is performing the build."}),"\n",(0,r.jsx)(n.h3,{id:"depth",children:"Depth"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Depth"})," refers to the maximum number of edges between a module and each of its leaf nodes in the\nproject dependency graph."]}),"\n",(0,r.jsx)(n.p,{children:"Low depth values indicate a shallow or flat project structure with loose (or no) coupling between\nmodules. In a full build, these projects scale well with hardware upgrades because they're able to\nbuild all those independent modules in parallel."}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart  TB\n\n  subgraph sg [A shallow graph]\n    direction TB\n\n    classDef depth3 fill:#F7B,stroke:#000,color:#000\n    classDef depth2 fill:#BBF,stroke:#000,color:#000\n    classDef depth1 fill:#B9B,stroke:#000,color:#000\n    classDef depth0 fill:#FBB,stroke:#000,color:#000\n\n    linkStyle default stroke-width:2px,fill:none,stroke:green;\n\n    app(depth: 2):::depth2\n\n    screen1(depth: 1):::depth1\n    screen2(depth: 1):::depth1\n    screen3(depth: 1):::depth1\n    screen4(depth: 1):::depth1\n\n    lib1(depth: 0):::depth0\n    lib2(depth: 0):::depth0\n    lib3(depth: 0):::depth0\n    lib4(depth: 0):::depth0\n    lib5(depth: 0):::depth0\n\n    app --\x3e screen1\n    app --\x3e screen2\n    app --\x3e screen3\n    app --\x3e screen4\n\n    screen1 --\x3e lib1\n    screen1 --\x3e lib4\n\n    screen2 --\x3e lib1\n    screen2 --\x3e lib3\n    screen2 --\x3e lib4\n\n    screen3 --\x3e lib2\n    screen3 --\x3e lib3\n    screen3 --\x3e lib4\n\n    screen4 --\x3e lib3\n    screen4 --\x3e lib5\n\n  end\n\n  style sg opacity:0.0\n"}),"\n",(0,r.jsxs)(n.p,{children:['On the other hand, "deep" projects do not offer many opportunities for parallelization. They have\nproject dependencies which must be built ',(0,r.jsx)(n.em,{children:"sequentially"}),". They also perform poorly in incremental\nbuilds, because a single change to even a mid-level module invalidates cached builds for half of the\nproject."]}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart  TB\n\n  style sg opacity:0.0\n  subgraph sg [A deep graph]\n    direction TB\n\n    classDef depth6 fill:#800,stroke:#000,color:#FFF\n    classDef depth5 fill:#A50,stroke:#000,color:#FFF\n    classDef depth4 fill:#C0B,stroke:#000,color:#000\n    classDef depth3 fill:#F7B,stroke:#000,color:#000\n    classDef depth2 fill:#BBF,stroke:#000,color:#000\n    classDef depth1 fill:#B9B,stroke:#000,color:#000\n    classDef depth0 fill:#FBB,stroke:#000,color:#000\n\n    linkStyle default stroke-width:2px,fill:none,stroke:green;\n\n    app(depth: 6):::depth6\n\n    screen1(depth: 5):::depth5\n    screen2(depth: 5):::depth5\n\n    screen3(depth: 4):::depth4\n    screen4(depth: 4):::depth4\n\n    lib1(depth: 3):::depth3\n    lib2(depth: 3):::depth3\n\n    lib3(depth: 2):::depth2\n    lib4(depth: 2):::depth2\n\n    lib5(depth: 1):::depth1\n\n    lib6(depth: 0):::depth0\n\n    app --\x3e screen1\n    app --\x3e screen2\n    app --\x3e screen3\n    app --\x3e screen4\n\n    screen1 --\x3e screen3\n    screen1 --\x3e screen4\n\n    screen2 --\x3e screen4\n\n    screen3 --\x3e lib1\n    screen3 --\x3e lib2\n\n    screen4 --\x3e lib1\n    screen4 --\x3e lib4\n\n    lib1 --\x3e lib3\n    lib1 --\x3e lib4\n\n    lib2 --\x3e lib3\n\n    lib3 --\x3e lib5\n    lib4 --\x3e lib5\n\n    lib5 --\x3e lib6\n\n  end\n"})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);