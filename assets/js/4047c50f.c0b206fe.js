"use strict";(self.webpackChunkmodulecheck=self.webpackChunkmodulecheck||[]).push([[9514],{65404:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>r});var t=o(36672);const s={},i=t.createContext(s);function d(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(i.Provider,{value:n},e.children)}},72275:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>u,contentTitle:()=>r,default:()=>c,frontMatter:()=>d,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"rules/android/unused_kotlin_android_extensions","title":"Unused Kotlin Android Extensions","description":"Finds modules which have deprecated Kotlin Android Extensions enabled, but don\'t actually use any","source":"@site/versioned_docs/version-0.12.0/rules/android/unused_kotlin_android_extensions.md","sourceDirName":"rules/android","slug":"/rules/android/unused_kotlin_android_extensions","permalink":"/ModuleCheck/docs/0.12.0/rules/android/unused_kotlin_android_extensions","draft":false,"unlisted":false,"editUrl":"https://github.com/rbusarow/ModuleCheck/blob/main/website/versioned_docs/version-0.12.0/rules/android/unused_kotlin_android_extensions.md","tags":[],"version":"0.12.0","frontMatter":{"id":"unused_kotlin_android_extensions","title":"Unused Kotlin Android Extensions","sidebar_label":"Unused Kotlin Android Extensions"},"sidebar":"Docs","previous":{"title":"Disable ViewBinding","permalink":"/ModuleCheck/docs/0.12.0/rules/android/disable_viewbinding"}}');var s=o(23420),i=o(65404);const d={id:"unused_kotlin_android_extensions",title:"Unused Kotlin Android Extensions",sidebar_label:"Unused Kotlin Android Extensions"},r=void 0,u={},a=[];function l(e){const n={p:"p",...(0,i.R)(),...e.components};return(0,s.jsx)(n.p,{children:"Finds modules which have deprecated Kotlin Android Extensions enabled, but don't actually use any\nsynthetic imports or deprecated @Parcelize annotation"})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);