public abstract interface class modulecheck/rule/test/AllRulesComponent : modulecheck/rule/RulesComponent {
	public static final field Companion Lmodulecheck/rule/test/AllRulesComponent$Companion;
}

public final class modulecheck/rule/test/AllRulesComponent$Companion {
	public final fun create (Lmodulecheck/config/ModuleCheckSettings;Lmodulecheck/rule/RuleFilter;)Lmodulecheck/rule/test/AllRulesComponent;
}

public abstract interface class modulecheck/rule/test/AllRulesComponent$Factory {
	public abstract fun create (Lmodulecheck/config/ModuleCheckSettings;Lmodulecheck/rule/RuleFilter;)Lmodulecheck/rule/test/AllRulesComponent;
}

public final class modulecheck/rule/test/DaggerAllRulesComponent {
	public static fun factory ()Lmodulecheck/rule/test/AllRulesComponent$Factory;
}

