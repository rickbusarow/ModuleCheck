/*
 * Copyright (C) 2021-2022 Rick Busarow
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package modulecheck.parsing.psi

import modulecheck.parsing.source.Reference.ExplicitKotlinReference
import modulecheck.parsing.source.asExplicitKotlinReference

internal fun String.kotlinStdLibNameOrNull(): ExplicitKotlinReference? {

  return kotlinStdLibNames[this]?.asExplicitKotlinReference()
}

internal val kotlinStdLibNames = mapOf(

  // kotlin
  "Annotation" to "kotlin.Annotation",
  "Any" to "kotlin.Any",
  "ArithmeticException" to "kotlin.ArithmeticException",
  "Array" to "kotlin.Array",
  "ArrayIndexOutOfBoundsException" to "kotlin.ArrayIndexOutOfBoundsException",
  "AssertionError" to "kotlin.AssertionError",
  "Boolean" to "kotlin.Boolean",
  "BooleanArray" to "kotlin.BooleanArray",
  "BuilderInference" to "kotlin.BuilderInference",
  "Byte" to "kotlin.Byte",
  "ByteArray" to "kotlin.ByteArray",
  "Char" to "kotlin.Char",
  "CharArray" to "kotlin.CharArray",
  "CharSequence" to "kotlin.CharSequence",
  "ClassCastException" to "kotlin.ClassCastException",
  "Comparable" to "kotlin.Comparable",
  "Comparator" to "kotlin.Comparator",
  "ConcurrentModificationException" to "kotlin.ConcurrentModificationException",
  "DeepRecursiveFunction" to "kotlin.DeepRecursiveFunction",
  "DeepRecursiveScope" to "kotlin.DeepRecursiveScope",
  "Deprecated" to "kotlin.Deprecated",
  "DeprecatedSinceKotlin" to "kotlin.DeprecatedSinceKotlin",
  "DeprecationLevel" to "kotlin.DeprecationLevel",
  "Double" to "kotlin.Double",
  "DoubleArray" to "kotlin.DoubleArray",
  "DslMarker" to "kotlin.DslMarker",
  "Enum" to "kotlin.Enum",
  "Error" to "kotlin.Error",
  "Exception" to "kotlin.Exception",
  "Experimental" to "kotlin.Experimental",
  "ExperimentalMultiplatform" to "kotlin.ExperimentalMultiplatform",
  "ExperimentalStdlibApi" to "kotlin.ExperimentalStdlibApi",
  "ExperimentalUnsignedTypes" to "kotlin.ExperimentalUnsignedTypes",
  "ExtensionFunctionType" to "kotlin.ExtensionFunctionType",
  "Float" to "kotlin.Float",
  "FloatArray" to "kotlin.FloatArray",
  "Function" to "kotlin.Function",
  "IllegalArgumentException" to "kotlin.IllegalArgumentException",
  "IllegalStateException" to "kotlin.IllegalStateException",
  "IndexOutOfBoundsException" to "kotlin.IndexOutOfBoundsException",
  "Int" to "kotlin.Int",
  "IntArray" to "kotlin.IntArray",
  "KotlinNullPointerException" to "kotlin.KotlinNullPointerException",
  "KotlinVersion" to "kotlin.KotlinVersion",
  "Lazy" to "kotlin.Lazy",
  "LazyThreadSafetyMode" to "kotlin.LazyThreadSafetyMode",
  "Long" to "kotlin.Long",
  "LongArray" to "kotlin.LongArray",
  "Metadata" to "kotlin.Metadata",
  "NoSuchElementException" to "kotlin.NoSuchElementException",
  "NoWhenBranchMatchedException" to "kotlin.NoWhenBranchMatchedException",
  "NotImplementedError" to "kotlin.NotImplementedError",
  "Nothing" to "kotlin.Nothing",
  "NullPointerException" to "kotlin.NullPointerException",
  "Number" to "kotlin.Number",
  "NumberFormatException" to "kotlin.NumberFormatException",
  "OptIn" to "kotlin.OptIn",
  "OptionalExpectation" to "kotlin.OptionalExpectation",
  "OutOfMemoryError" to "kotlin.OutOfMemoryError",
  "OverloadResolutionByLambdaReturnType" to "kotlin.OverloadResolutionByLambdaReturnType",
  "Pair" to "kotlin.Pair",
  "ParameterName" to "kotlin.ParameterName",
  "PublishedApi" to "kotlin.PublishedApi",
  "ReplaceWith" to "kotlin.ReplaceWith",
  "RequiresOptIn" to "kotlin.RequiresOptIn",
  "Result" to "kotlin.Result",
  "RuntimeException" to "kotlin.RuntimeException",
  "Short" to "kotlin.Short",
  "ShortArray" to "kotlin.ShortArray",
  "SinceKotlin" to "kotlin.SinceKotlin",
  "Suppress" to "kotlin.Suppress",
  "Throwable" to "kotlin.Throwable",
  "Triple" to "kotlin.Triple",
  "TypeCastException" to "kotlin.TypeCastException",
  "UByte" to "kotlin.UByte",
  "UByteArray" to "kotlin.UByteArray",
  "UInt" to "kotlin.UInt",
  "UIntArray" to "kotlin.UIntArray",
  "ULong" to "kotlin.ULong",
  "ULongArray" to "kotlin.ULongArray",
  "UShort" to "kotlin.UShort",
  "UShortArray" to "kotlin.UShortArray",
  "UninitializedPropertyAccessException" to "kotlin.UninitializedPropertyAccessException",
  "Unit" to "kotlin.Unit",
  "UnsafeVariance" to "kotlin.UnsafeVariance",
  "UnsupportedOperationException" to "kotlin.UnsupportedOperationException",
  "UseExperimental" to "kotlin.UseExperimental",

  // kotlin.annotation
  "AnnotationRetention" to "kotlin.annotation.AnnotationRetention",
  "AnnotationTarget" to "kotlin.annotation.AnnotationTarget",
  "MustBeDocumented" to "kotlin.annotation.MustBeDocumented",
  "Repeatable" to "kotlin.annotation.Repeatable",
  "Retention" to "kotlin.annotation.Retention",
  "Target" to "kotlin.annotation.Target",

  // kotlin.collections
  "AbstractCollection" to "kotlin.collections.AbstractCollection",
  "AbstractIterator" to "kotlin.collections.AbstractIterator",
  "AbstractList" to "kotlin.collections.AbstractList",
  "AbstractMap" to "kotlin.collections.AbstractMap",
  "AbstractMutableCollection" to "kotlin.collections.AbstractMutableCollection",
  "AbstractMutableList" to "kotlin.collections.AbstractMutableList",
  "AbstractMutableMap" to "kotlin.collections.AbstractMutableMap",
  "AbstractMutableSet" to "kotlin.collections.AbstractMutableSet",
  "AbstractSet" to "kotlin.collections.AbstractSet",
  "ArrayDeque" to "kotlin.collections.ArrayDeque",
  "ArrayList" to "kotlin.collections.ArrayList",
  "BooleanIterator" to "kotlin.collections.BooleanIterator",
  "ByteIterator" to "kotlin.collections.ByteIterator",
  "CharIterator" to "kotlin.collections.CharIterator",
  "Collection" to "kotlin.collections.Collection",
  "DoubleIterator" to "kotlin.collections.DoubleIterator",
  "FloatIterator" to "kotlin.collections.FloatIterator",
  "Grouping" to "kotlin.collections.Grouping",
  "HashMap" to "kotlin.collections.HashMap",
  "HashSet" to "kotlin.collections.HashSet",
  "IndexedValue" to "kotlin.collections.IndexedValue",
  "IntIterator" to "kotlin.collections.IntIterator",
  "Iterable" to "kotlin.collections.Iterable",
  "Iterator" to "kotlin.collections.Iterator",
  "LinkedHashMap" to "kotlin.collections.LinkedHashMap",
  "LinkedHashSet" to "kotlin.collections.LinkedHashSet",
  "List" to "kotlin.collections.List",
  "ListIterator" to "kotlin.collections.ListIterator",
  "LongIterator" to "kotlin.collections.LongIterator",
  "Map" to "kotlin.collections.Map",
  "MutableCollection" to "kotlin.collections.MutableCollection",
  "MutableIterable" to "kotlin.collections.MutableIterable",
  "MutableIterator" to "kotlin.collections.MutableIterator",
  "MutableList" to "kotlin.collections.MutableList",
  "MutableListIterator" to "kotlin.collections.MutableListIterator",
  "MutableMap" to "kotlin.collections.MutableMap",
  "MutableSet" to "kotlin.collections.MutableSet",
  "RandomAccess" to "kotlin.collections.RandomAccess",
  "Set" to "kotlin.collections.Set",
  "ShortIterator" to "kotlin.collections.ShortIterator",
  "UByteIterator" to "kotlin.collections.UByteIterator",
  "UIntIterator" to "kotlin.collections.UIntIterator",
  "ULongIterator" to "kotlin.collections.ULongIterator",
  "UShortIterator" to "kotlin.collections.UShortIterator",

  // kotlin.io
  "AccessDeniedException" to "kotlin.io.AccessDeniedException",
  "FileAlreadyExistsException" to "kotlin.io.FileAlreadyExistsException",
  "FileSystemException" to "kotlin.io.FileSystemException",
  "FileTreeWalk" to "kotlin.io.FileTreeWalk",
  "FileWalkDirection" to "kotlin.io.FileWalkDirection",
  "NoSuchFileException" to "kotlin.io.NoSuchFileException",
  "OnErrorAction" to "kotlin.io.OnErrorAction",

  // kotlin.jvm
  "JvmDefault" to "kotlin.jvm.JvmDefault",
  "JvmDefaultWithoutCompatibility" to "kotlin.jvm.JvmDefaultWithoutCompatibility",
  "JvmField" to "kotlin.jvm.JvmField",
  "JvmInline" to "kotlin.jvm.JvmInline",
  "JvmMultifileClass" to "kotlin.jvm.JvmMultifileClass",
  "JvmName" to "kotlin.jvm.JvmName",
  "JvmOverloads" to "kotlin.jvm.JvmOverloads",
  "JvmRecord" to "kotlin.jvm.JvmRecord",
  "JvmRepeatable" to "kotlin.jvm.JvmRepeatable",
  "JvmStatic" to "kotlin.jvm.JvmStatic",
  "JvmSuppressWildcards" to "kotlin.jvm.JvmSuppressWildcards",
  "JvmSynthetic" to "kotlin.jvm.JvmSynthetic",
  "JvmWildcard" to "kotlin.jvm.JvmWildcard",
  "KotlinReflectionNotSupportedError" to "kotlin.jvm.KotlinReflectionNotSupportedError",
  "PurelyImplements" to "kotlin.jvm.PurelyImplements",
  "Strictfp" to "kotlin.jvm.Strictfp",
  "Synchronized" to "kotlin.jvm.Synchronized",
  "Throws" to "kotlin.jvm.Throws",
  "Transient" to "kotlin.jvm.Transient",
  "Volatile" to "kotlin.jvm.Volatile",

  // kotlin.ranges
  "CharProgression" to "kotlin.ranges.CharProgression",
  "CharRange" to "kotlin.ranges.CharRange",
  "ClosedFloatingPointRange" to "kotlin.ranges.ClosedFloatingPointRange",
  "ClosedRange" to "kotlin.ranges.ClosedRange",
  "IntProgression" to "kotlin.ranges.IntProgression",
  "IntRange" to "kotlin.ranges.IntRange",
  "LongProgression" to "kotlin.ranges.LongProgression",
  "LongRange" to "kotlin.ranges.LongRange",
  "UIntProgression" to "kotlin.ranges.UIntProgression",
  "UIntRange" to "kotlin.ranges.UIntRange",
  "ULongProgression" to "kotlin.ranges.ULongProgression",
  "ULongRange" to "kotlin.ranges.ULongRange",

  // kotlin.sequences
  "Sequence" to "kotlin.sequences.Sequence",
  "SequenceBuilder" to "kotlin.sequences.SequenceBuilder",
  "SequenceScope" to "kotlin.sequences.SequenceScope",

  // kotlin.text
  "Appendable" to "kotlin.text.Appendable",
  "CharCategory" to "kotlin.text.CharCategory",
  "CharDirectionality" to "kotlin.text.CharDirectionality",
  "CharacterCodingException" to "kotlin.text.CharacterCodingException",
  "Charsets" to "kotlin.text.Charsets",
  "MatchGroup" to "kotlin.text.MatchGroup",
  "MatchGroupCollection" to "kotlin.text.MatchGroupCollection",
  "MatchNamedGroupCollection" to "kotlin.text.MatchNamedGroupCollection",
  "MatchResult" to "kotlin.text.MatchResult",
  "Regex" to "kotlin.text.Regex",
  "RegexOption" to "kotlin.text.RegexOption",
  "String" to "kotlin.text.String",
  "StringBuilder" to "kotlin.text.StringBuilder",
  "Typography" to "kotlin.text.Typography"
)
